{"ast":null,"code":"import _objectSpread from\"/Users/sumiyoshitsubasa/Redux-Github-Viewer/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/sumiyoshitsubasa/Redux-Github-Viewer/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/sumiyoshitsubasa/Redux-Github-Viewer/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  border: 1px solid \",\";\\n  border-radius: 6px;\\n  width: 100%;\\n  text-align: left;\\n  th,\\n  td {\\n    border-bottom: 1px solid \",\";\\n    padding: 10px 5px;\\n    cursor: pointer;\\n  }\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  padding: 32px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from\"react\";import styled from\"styled-components\";import{ButtonGreen,ButtonRed}from\"../atoms/Button\";import SerchText from\"../atoms/SerchText\";import ModalContent from\"../organisms/ModalContent\";import EditContent from\"../organisms/EditContent\";import{colors}from\"../../styles/Variables\";import Modal from\"react-modal\";import List from\"../organisms/List\";Modal.setAppElement(\"#root\");var customStyles={content:{width:\"60%\",margin:\"auto\"}};var Container=styled.div(_templateObject());var SerchTop=styled.div(_templateObject2());var Buttons=styled.div(_templateObject3());var Title=styled.h2(_templateObject4());var Board=styled.div(_templateObject5());var Table=styled.table(_templateObject6(),colors.border,colors.border);var Issue=function Issue(_ref){var data=_ref.data,removeList=_ref.removeList,addList=_ref.addList,editList=_ref.editList;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),edit=_useState4[0],setEdit=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),search=_useState6[0],setSearch=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),issue=_useState8[0],setIssue=_useState8[1];var _useState9=useState({}),_useState10=_slicedToArray(_useState9,2),check=_useState10[0],setCheck=_useState10[1];var closeModal=function closeModal(){return setOpen(false);};var lists=function lists(){var object=Object.values(data);if(!search){return object;}return object.filter(function(item){return item.title.includes(search);});};var openNew=function openNew(){if(!edit){setOpen(true);}else{setEdit(false);setOpen(true);}};var openEdit=function openEdit(issue){setIssue(issue);if(!edit){setEdit(true);setOpen(true);}else{setOpen(true);}};var onCheck=function onCheck(id){var newCheck=_objectSpread({},check);if(check[id]){delete newCheck[id];}else{newCheck[id]=true;}setCheck(newCheck);};var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),mark=_useState12[0],setMark=_useState12[1];var allCheck=function allCheck(){var el=Object.values(data).map(function(item){return item.id;});var newCheck=_objectSpread({},check);if(mark){setMark(false);setCheck({});}else{setMark(true);el.forEach(function(item){newCheck[item]=true;});setCheck(newCheck);}};var onRemove=function onRemove(){Object.keys(check).forEach(function(item){removeList({id:item});});};console.log(lists());return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(SerchTop,null,/*#__PURE__*/React.createElement(Title,null,\"Issue\"),/*#__PURE__*/React.createElement(SerchText,{search:search,setSearch:setSearch}),/*#__PURE__*/React.createElement(Buttons,null,/*#__PURE__*/React.createElement(ButtonGreen,{onClick:openNew},\"New\"),/*#__PURE__*/React.createElement(ButtonRed,{onClick:onRemove},\"Dlete\"))),/*#__PURE__*/React.createElement(Board,null,/*#__PURE__*/React.createElement(Table,null,/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:mark,onClick:allCheck})),/*#__PURE__*/React.createElement(\"th\",null),/*#__PURE__*/React.createElement(\"th\",null,\"\\u30B9\\u30C6\\u30FC\\u30BF\\u30B9\"),/*#__PURE__*/React.createElement(\"th\",null,\"\\u4F5C\\u6210\\u8005\"),/*#__PURE__*/React.createElement(\"th\",null,\"\\u4F5C\\u6210\\u65E5\\u4ED8\"),/*#__PURE__*/React.createElement(\"th\",null,\"\\u66F4\\u65B0\\u65E5\\u4ED8\"))),/*#__PURE__*/React.createElement(\"tbody\",null,lists().length?lists().map(function(list){var onClick=function onClick(){return openEdit(list);};return/*#__PURE__*/React.createElement(List,{onCheck:onCheck,check:check[list.id],key:list.id,list:list,onClick:onClick});}):/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"\\u30C7\\u30FC\\u30BF\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"))))),/*#__PURE__*/React.createElement(Modal,{isOpen:open},edit?/*#__PURE__*/React.createElement(EditContent,{issue:issue,closeModal:closeModal,editList:editList}):/*#__PURE__*/React.createElement(ModalContent,{closeModal:closeModal,addList:addList,removeList:removeList})));};export default Issue;","map":{"version":3,"sources":["/Users/sumiyoshitsubasa/Redux-Github-Viewer/src/components/templetes/Issue.js"],"names":["React","useState","styled","ButtonGreen","ButtonRed","SerchText","ModalContent","EditContent","colors","Modal","List","setAppElement","customStyles","content","width","margin","Container","div","SerchTop","Buttons","Title","h2","Board","Table","table","border","Issue","data","removeList","addList","editList","open","setOpen","edit","setEdit","search","setSearch","issue","setIssue","check","setCheck","closeModal","lists","object","Object","values","filter","item","title","includes","openNew","openEdit","onCheck","id","newCheck","mark","setMark","allCheck","el","map","forEach","onRemove","keys","console","log","length","list","onClick"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ButtonGreen, ButtonRed } from \"../atoms/Button\";\nimport SerchText from \"../atoms/SerchText\";\nimport ModalContent from \"../organisms/ModalContent\";\nimport EditContent from \"../organisms/EditContent\";\nimport { colors } from \"../../styles/Variables\";\nimport Modal from \"react-modal\";\nimport List from \"../organisms/List\";\n\nModal.setAppElement(\"#root\");\n\nconst customStyles = {\n  content: {\n    width: \"60%\",\n    margin: \"auto\",\n  },\n};\n\nconst Container = styled.div`\n  padding: 32px;\n`;\n\nconst SerchTop = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n`;\nconst Title = styled.h2``;\n\nconst Board = styled.div``;\nconst Table = styled.table`\n  border: 1px solid ${colors.border};\n  border-radius: 6px;\n  width: 100%;\n  text-align: left;\n  th,\n  td {\n    border-bottom: 1px solid ${colors.border};\n    padding: 10px 5px;\n    cursor: pointer;\n  }\n`;\n\nconst Issue = ({ data, removeList, addList, editList }) => {\n  const [open, setOpen] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [issue, setIssue] = useState();\n  const [check, setCheck] = useState({});\n  const closeModal = () => setOpen(false);\n  const lists = () => {\n    const object = Object.values(data);\n    if (!search) {\n      return object;\n    }\n    return object.filter((item) => item.title.includes(search));\n  };\n  const openNew = () => {\n    if (!edit) {\n      setOpen(true);\n    } else {\n      setEdit(false);\n      setOpen(true);\n    }\n  };\n  const openEdit = (issue) => {\n    setIssue(issue);\n    if (!edit) {\n      setEdit(true);\n      setOpen(true);\n    } else {\n      setOpen(true);\n    }\n  };\n  const onCheck = (id) => {\n    const newCheck = { ...check };\n    if (check[id]) {\n      delete newCheck[id];\n    } else {\n      newCheck[id] = true;\n    }\n    setCheck(newCheck);\n  };\n  const [mark, setMark] = useState(false);\n  const allCheck = () => {\n    const el = Object.values(data).map((item) => {\n      return item.id;\n    });\n    const newCheck = { ...check };\n    if (mark) {\n      setMark(false);\n      setCheck({});\n    } else {\n      setMark(true);\n      el.forEach((item) => {\n        newCheck[item] = true;\n      });\n      setCheck(newCheck);\n    }\n  };\n  const onRemove = () => {\n    Object.keys(check).forEach((item) => {\n      removeList({ id: item });\n    });\n  };\n  console.log(lists());\n  return (\n    <Container>\n      <SerchTop>\n        <Title>Issue</Title>\n        <SerchText search={search} setSearch={setSearch} />\n        <Buttons>\n          <ButtonGreen onClick={openNew}>New</ButtonGreen>\n          <ButtonRed onClick={onRemove}>Dlete</ButtonRed>\n        </Buttons>\n      </SerchTop>\n      <Board>\n        <Table>\n          <thead>\n            <tr>\n              <th>\n                <input\n                  type=\"checkbox\"\n                  checked={mark}\n                  onClick={allCheck}\n                ></input>\n              </th>\n              <th></th>\n              <th>ステータス</th>\n              <th>作成者</th>\n              <th>作成日付</th>\n              <th>更新日付</th>\n            </tr>\n          </thead>\n          <tbody>\n            {lists().length ? (\n              lists().map((list) => {\n                const onClick = () => openEdit(list);\n                return (\n                  <List\n                    onCheck={onCheck}\n                    check={check[list.id]}\n                    key={list.id}\n                    list={list}\n                    onClick={onClick}\n                  />\n                );\n              })\n            ) : (\n              <tr>\n                <td>データがありません</td>\n              </tr>\n            )}\n          </tbody>\n        </Table>\n      </Board>\n      <Modal isOpen={open}>\n        {edit ? (\n          <EditContent\n            issue={issue}\n            closeModal={closeModal}\n            editList={editList}\n          />\n        ) : (\n          <ModalContent\n            closeModal={closeModal}\n            addList={addList}\n            removeList={removeList}\n          />\n        )}\n      </Modal>\n    </Container>\n  );\n};\n\nexport default Issue;\n"]},"metadata":{},"sourceType":"module"}